---
- name: "Neovim | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: neovim_distribution_config

- name: "Neovim | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: neovim_distribution_config.stat.exists

- name: "Neovim | Download the Neovim AppImage"
  ansible.builtin.get_url:
    url: https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
    dest: /tmp/nvim.appimage
  notify:
    - Remove downloaded Neovim AppImage

- name: "Neovim | Remove any current Neovim installations"
  ansible.builtin.file:
    path: /usr/bin/nvim
    state: absent
  become: true
  changed_when: false

- name: "Neovim | Install Neovim"
  ansible.builtin.copy:
    remote_src: true
    src: /tmp/nvim.appimage
    dest: /usr/bin/nvim
    mode: "0755"
    force: true
  become: true
  changed_when: false

- name: "Neovim | Config folder"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/nvim"
    state: directory

- name: "Neovim | Create symlink to role files directory"
  ansible.builtin.file:
    src: "{{ role_path }}/files"
    dest: "{{ ansible_user_dir }}/.config/nvim"
    state: link
    force: true

- name: "Neovim | Copy init.lua"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/init.lua"
    src: "init.lua"
    mode: "0644"

- name: "Neovim | Copy .neoconf.json"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/.neoconf.json"
    src: ".neoconf.json"
    mode: "0644"

- name: "Neovim | Copy modules"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/nvim/lua"
    src: "lua/"
    mode: "0644"
